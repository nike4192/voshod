"""
Django settings for voshod project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from environs import Env
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

env = Env()
env.read_env()

# Настройки API Почты России
POCHTA_API_TOKEN = 'zmI6LeNHjYFpbD_g04BLbg3sHOZz6GFK'  # Замените на ваш токен
POCHTA_API_KEY = 'd29jeG9kLnZzaGRAeWFuZGV4LnJ1OndvY3hvZCFnb2RubzE='     # Замените на ваш ключ
POCHTA_API_URL = 'https://otpravka-api.pochta.ru'

CDEK_CLIENT_ID = env.str("CDEK_CLIENT_ID", default="wqGwiQx0gg8mLtiEKsUinjVSICCjtTEP")  # Замените на ваш ID клиента
CDEK_CLIENT_SECRET = env.str("CDEK_CLIENT_SECRET", default="RmAmgvSgSl1yirlz9QupbzOJVqhCxcP5")  # Замените на ваш секрет
CDEK_API_URL = env.str("CDEK_API_URL", default="https://api.edu.cdek.ru")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY", default="django-insecure-l#2o2gs1ha-jx1n6o#ftbn5_i)e^6uscu$qkd*^+3)d)j(2mu)")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = env.list(
    "ALLOWED_HOSTS", default=["localhost", "127.0.0.1"]
)

# Разрешаем кросс-доменные запросы в разработке
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
 "http://localhost",
]

# Настройки CSRF для работы с SPA
CSRF_COOKIE_SAMESITE = 'Lax'  # В продакшене используйте 'Lax' или 'Strict'
CSRF_COOKIE_HTTPONLY = False  # False позволяет JavaScript читать cookie
CSRF_USE_SESSIONS = False  # Храним токен в cookie, а не в сессии
CSRF_COOKIE_NAME = 'csrftoken'  # Стандартное имя, которое ожидает Django
CSRF_HEADER_NAME = 'X-CSRFToken'  # Заголовок для проверки токена
CSRF_TRUSTED_ORIGINS = env.list(
    "CSRF_TRUSTED_ORIGINS", default=[]
)

# Security Settings
X_FRAME_OPTIONS = "SAMEORIGIN"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'voshod',
    'rest_framework',
    "corsheaders",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = 'voshod.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'voshod.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.postgresql",  # please change and delete after upgrade postgresql
        "NAME": env.str("POSTGRES_DB", "postgres"),
        "USER": env.str("POSTGRES_USER", "postgres"),
        "PASSWORD": env.str("POSTGRES_PASSWORD", "postgres"),
        "HOST": env.str("POSTGRES_HOST", "postgres"),
        "PORT": env.int("POSTGRES_PORT", 5432),
        "ATOMIC_REQUESTS": True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
